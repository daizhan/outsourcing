{
  "version": 3,
  "sources": [
    "config.js",
    "layer.js",
    "utils.js",
    "color-picker.js",
    "popup-menu.js",
    "common.js",
    "attrs.js",
    "view.js",
    "model.js",
    "draw.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACljJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACx
  "file": "main.js",
  "sourcesContent": [
    "require.config({\r\n    baseUrl: \"js\",\r\n    paths: {\r\n        \"jquery\": \"lib/jquery.min\",\r\n        \"underscore\": \"lib/underscore.min\",\r\n        \"backbone\": \"lib/backbone.min\",\r\n        \"svg\": \"lib/svg.min\",\r\n    }\r\n});\ndefine(\"config\", function(){});\n\n",
    "/*! layer mobile v2.0 弹层组件移动版\r\n * 扩展列表\r\n * 1. className 选项设置在最外层元素\r\n * 2. 新增方法topNotify 等同于 layer.open({className: \"top-notify top-xxx-notify\"}), xxx 为传过过来notify 类型， 可以是info/error/success 之一\r\n */\r\ndefine('layer',[],function() {\r\n    \"use strict\";\r\n    var doc = document,\r\n        query = 'querySelectorAll',\r\n        claname = 'getElementsByClassName',\r\n        S = function(s) {\r\n            return doc[query](s);\r\n        };\r\n\r\n    //默认配置\r\n    var config = {\r\n        type: 0,\r\n        shade: true,\r\n        shadeClose: true,\r\n        fixed: true,\r\n        anim: 'scale' //默认动画类型\r\n    };\r\n\r\n    var ready = {\r\n        extend: function(obj) {\r\n            var newobj = JSON.parse(JSON.stringify(config));\r\n            for (var i in obj) {\r\n                newobj[i] = obj[i];\r\n            }\r\n            return newobj;\r\n        },\r\n        timer: {},\r\n        end: {}\r\n    };\r\n\r\n    //点触事件\r\n    ready.touch = function(elem, fn) {\r\n        elem.addEventListener('click', function(e) {\r\n            fn.call(this, e);\r\n        }, false);\r\n    };\r\n\r\n    var index = 0,\r\n        classs = ['layui-m-layer'],\r\n        Layer = function(options) {\r\n            var that = this;\r\n            that.config = ready.extend(options);\r\n            if (that.config.className) {\r\n                that.config.className = [classs[0], that.config.className];\r\n            } else {\r\n                that.config.className = classs;\r\n            }\r\n            that.view();\r\n        };\r\n\r\n    Layer.prototype.view = function() {\r\n        var that = this,\r\n            config = that.config,\r\n            layerbox = doc.createElement('div');\r\n\r\n        that.id = layerbox.id = classs[0] + index;\r\n        layerbox.setAttribute('class', that.config.className.join(\" \") + ' ' + classs[0] + (config.type || 0));\r\n        layerbox.setAttribute('index', index);\r\n\r\n        //标题区域\r\n        var title = (function() {\r\n            var titype = typeof config.title === 'object';\r\n            return config.title ?\r\n                '<h3 style=\"' + (titype ? config.title[1] : '') + '\">' + (titype ? config.title[0] : config.title) + '</h3>' :\r\n                '';\r\n        }());\r\n\r\n        //按钮区域\r\n        var button = (function() {\r\n            typeof config.btn === 'string' && (config.btn = [config.btn]);\r\n            var btns = (config.btn || []).length,\r\n                btndom;\r\n            if (btns === 0 || !config.btn) {\r\n                return '';\r\n            }\r\n            btndom = '<span yes type=\"1\">' + config.btn[0] + '</span>'\r\n            if (btns === 2) {\r\n                btndom = '<span no type=\"0\">' + config.btn[1] + '</span>' + btndom;\r\n            }\r\n            return '<div class=\"layui-m-layerbtn\">' + btndom + '</div>';\r\n        }());\r\n\r\n        if (!config.fixed) {\r\n            config.top = config.hasOwnProperty('top') ? config.top : 100;\r\n            config.style = config.style || '';\r\n            config.style += ' top:' + (doc.body.scrollTop + config.top) + 'px';\r\n        }\r\n\r\n        if (config.type === 2) {\r\n            config.content = '<i></i><i class=\"layui-m-layerload\"></i><i></i><p>' + (config.content || '') + '</p>';\r\n        }\r\n\r\n        if (config.skin) config.anim = 'up';\r\n        if (config.skin === 'msg') config.shade = false;\r\n\r\n        layerbox.innerHTML = (config.shade ? '<div ' + (typeof config.shade === 'string' ? 'style=\"' + config.shade + '\"' : '') + ' class=\"layui-m-layershade\"></div>' : '') +\r\n            '<div class=\"layui-m-layermain\" ' + (!config.fixed ? 'style=\"position:static;\"' : '') + '>' +\r\n            '<div class=\"layui-m-layersection\">' +\r\n            '<div class=\"layui-m-layerchild ' + (config.skin ? 'layui-m-layer-' + config.skin + ' ' : '') + ' ' + (config.anim ? 'layui-m-anim-' + config.anim : '') + '\" ' + (config.style ? 'style=\"' + config.style + '\"' : '') + '>' +\r\n            title +\r\n            '<div class=\"layui-m-layercont\">' + config.content + '</div>' +\r\n            button +\r\n            '</div>' +\r\n            '</div>' +\r\n            '</div>';\r\n\r\n        if (!config.type || config.type === 2) {\r\n            var dialogs = doc[claname](classs[0] + config.type),\r\n                dialen = dialogs.length;\r\n            if (dialen >= 1) {\r\n                layer.close(dialogs[0].getAttribute('index'))\r\n            }\r\n        }\r\n\r\n        document.body.appendChild(layerbox);\r\n        var elem = that.elem = S('#' + that.id)[0];\r\n        config.success && config.success(elem);\r\n\r\n        that.index = index++;\r\n        that.action(config, elem);\r\n    };\r\n\r\n    Layer.prototype.action = function(config, elem) {\r\n        var that = this;\r\n\r\n        //自动关闭\r\n        if (config.time) {\r\n            ready.timer[that.index] = setTimeout(function() {\r\n                layer.close(that.index);\r\n            }, config.time * 1000);\r\n        }\r\n\r\n        //确认取消\r\n        var btn = function() {\r\n            var type = this.getAttribute('type');\r\n            if (type == 0) {\r\n                config.no && config.no();\r\n                layer.close(that.index);\r\n            } else {\r\n                config.yes ? config.yes(that.index) : layer.close(that.index);\r\n            }\r\n        };\r\n        if (config.btn) {\r\n            var btns = elem[claname]('layui-m-layerbtn')[0].children,\r\n                btnlen = btns.length;\r\n            for (var ii = 0; ii < btnlen; ii++) {\r\n                ready.touch(btns[ii], btn);\r\n            }\r\n        }\r\n\r\n        //点遮罩关闭\r\n        if (config.shade && config.shadeClose) {\r\n            var shade = elem[claname]('layui-m-layershade')[0];\r\n            ready.touch(shade, function() {\r\n                layer.close(that.index, config.end);\r\n            });\r\n        }\r\n\r\n        config.end && (ready.end[that.index] = config.end);\r\n    };\r\n\r\n    var layer = {\r\n        v: '2.0',\r\n        index: index,\r\n\r\n        //核心方法\r\n        open: function(options) {\r\n            var o = new Layer(options || {});\r\n            return o.index;\r\n        },\r\n\r\n        topNotify: function(notifyType, options) {\r\n            options.className = \"top-notify top-\" + notifyType + \"-notify\";\r\n            this.open(options);\r\n        },\r\n\r\n        close: function(index) {\r\n            var ibox = S('#' + classs[0] + index)[0];\r\n            if (!ibox) return;\r\n            ibox.innerHTML = '';\r\n            doc.body.removeChild(ibox);\r\n            clearTimeout(ready.timer[index]);\r\n            delete ready.timer[index];\r\n            typeof ready.end[index] === 'function' && ready.end[index]();\r\n            delete ready.end[index];\r\n        },\r\n\r\n        //关闭所有layer层\r\n        closeAll: function() {\r\n            var boxs = doc[claname](classs[0]);\r\n            for (var i = 0, len = boxs.length; i < len; i++) {\r\n                layer.close((boxs[0].getAttribute('index') | 0));\r\n            }\r\n        }\r\n    };\r\n    return layer;\r\n});\n",
    "define('utils',[\"jquery\"], function($) {\r\n    return {\r\n        encodeHtmlAttr: function(attr) {\r\n            return attr.replace(/'|\"/g, function(match) {\r\n                if (match == '\"') {\r\n                    return \"&quot;\";\r\n                }\r\n                return \"&#39;\";\r\n            });\r\n        },\r\n        encodeHtml: function(html) {\r\n            return $(\"<div></div>\").text(html).html();\r\n        },\r\n        encodeHtmlAndAttr: function(content) {\r\n            return this.encodeHtmlAndAttr($(\"<div></div>\").text(content).html());\r\n        },\r\n    }\r\n});\n",
    "define('color-picker',[\"jquery\", \"utils\"], function($, Utils) {\r\n    var ColorPicker = {\r\n        formatColor: function(color) {\r\n            if (color <= 0) {\r\n                color = 0;\r\n            } else if (color >= 255) {\r\n                color = 255;\r\n            }\r\n            color = color.toString(16);\r\n            if (color.length <= 1) {\r\n                color = \"0\" + color;\r\n            }\r\n            return color;\r\n        },\r\n        initColor: function() {\r\n            var self = this,\r\n                startColor = parseInt(\"ff\", 16),\r\n                endColor = parseInt(\"00\", 16),\r\n                count = 12,\r\n                colors = {\r\n                    whiteBack: [],\r\n                    all: []\r\n                },\r\n                offset = 0,\r\n                color = \"\";\r\n            offset = Math.floor(startColor / (count - 1));\r\n            for (var i = 0; i < count; i++) {\r\n                if (i == count - 1) {\r\n                    color = this.formatColor(endColor);\r\n                } else {\r\n                    color = this.formatColor(startColor - i * offset);\r\n                }\r\n                colors.whiteBack.push(color + color + color);\r\n            }\r\n            count = 9;\r\n            colorList = [\"ff,00,00\", \"ff,88,00\", \"ff,ff,00\", \"88,ff,00\", \"00,ff,00\", \"00,ff,88\", \"00,ff,ff\", \"00,88,ff\", \"00,00,ff\", \"88,00,ff\", \"ff,00,ff\", \"ff,00,88\"];\r\n            offset = parseInt(\"33\", 16);\r\n            for (var i = 1; i <= count; i++) {\r\n                colorList.forEach(function(value) {\r\n                    value = value.split(\",\");\r\n                    color = \"\";\r\n                    offset = parseInt(\"33\", 16) * (Math.ceil(count / 2) - i);\r\n                    value.forEach(function(item) {\r\n                        var num = parseInt(item, 16);\r\n                        if (num == 255 || num == 0) {\r\n                            color += self.formatColor(num + offset);\r\n                        } else {\r\n                            color += self.formatColor(num + parseInt(offset / 2));\r\n                        }\r\n                    });\r\n                    colors.all.push(color);\r\n                });\r\n            }\r\n            return colors;\r\n        },\r\n        createDom: function(colors) {\r\n            var whiteBackHtml = \"\",\r\n                allHtml = \"\",\r\n                html = \"\";\r\n            for (var i = 0, len = colors.whiteBack.length; i < len; i++) {\r\n                whiteBackHtml += \"<li class='color-\" + colors.whiteBack[i] + \"' style='background: #\" + colors.whiteBack[i] + \";' data-color='\" + colors.whiteBack[i] + \"'></li>\";\r\n            }\r\n            for (var i = 0, len = colors.all.length; i < len; i++) {\r\n                allHtml += \"<li class='color-\" + colors.all[i] + \"' style='background: #\" + colors.all[i] + \";' data-color='\" + colors.all[i] + \"'></li>\";\r\n            }\r\n            html = '<div class=\"common-popup-block color-picker\">\\\r\n                            <ul>' + whiteBackHtml + '</ul>\\\r\n                            <ul class=\"recommend-color\">' + allHtml + '</ul>\\\r\n                            <div class=\"color-info\">\\\r\n                                <label for=\"color\">#</label>\\\r\n                                <input id=\"color\" type=\"text\" value=\"\" maxlength=\"6\" />\\\r\n                                <span class=\"selected-color\"></span>\\\r\n                            </div>\\\r\n                        </div>';\r\n            $(\"body\").append(html);\r\n        },\r\n        markSelecteColor: function(color) {\r\n            var $popup = $(\".color-picker\");\r\n            $popup.find(\".color-\" + color).addClass(\"selected\");\r\n            $popup.find(\"#color\").val(color);\r\n            $popup.find(\".selected-color\").css(\"background\", \"#\" + color);\r\n        },\r\n        setPopupPos: function($target) {\r\n            var offset = $target.offset(),\r\n                height = $target.height(),\r\n                $popup = $(\".color-picker\"),\r\n                gap = 5;\r\n            $popup.css({\r\n                left: offset.left + \"px\",\r\n                top: offset.top + height + gap + \"px\"\r\n            });\r\n        },\r\n        clean: function() {\r\n            var $popup = $(\".color-picker\");\r\n            $popup.remove();\r\n            this.color = \"\";\r\n            this.triggerType = \"\";\r\n            $(document).off(\"click\", this.bindBodyClickEvent);\r\n        },\r\n        setEvent: function(callback) {\r\n            var self = this;\r\n            var $popup = $(\".color-picker\");\r\n            $popup.find(\"li\").hover(\r\n                function() {\r\n                    var $target = $(this),\r\n                        color = $target.attr(\"data-color\");\r\n                    $popup.find(\"#color\").val(color);\r\n                    $popup.find(\".selected-color\").css(\"background\", \"#\" + color);\r\n                },\r\n                function() {\r\n                    $popup.find(\"#color\").val(self.color);\r\n                    $popup.find(\".selected-color\").css(\"background\", \"#\" + self.color);\r\n                }\r\n            );\r\n            $popup.find(\"#color\").on(\"input\", function() {\r\n                var $target = $(this);\r\n                $popup.find(\".selected-color\").css(\"background\", \"#\" + $target.val());\r\n            });\r\n            $popup.find(\".selected-color, li\").on(\"click\", function() {\r\n                var color = $popup.find(\"#color\").val();\r\n                callback(color);\r\n                self.clean();\r\n            });\r\n            $(document).on(\"click\", self.bindBodyClickEvent);\r\n        },\r\n        bindBodyClickEvent: function(event) {\r\n            var $target = $(event.target);\r\n            if (ColorPicker.triggerType != \"triggerByTarget\" && !$target.hasClass(\"color-picker\") && !$target.parents(\".color-picker\").length) {\r\n                ColorPicker.clean();\r\n            }\r\n            ColorPicker.triggerType = \"\";\r\n        },\r\n        init: function($target, color, callback, triggerType) {\r\n            this.clean();\r\n            this.color = color;\r\n            this.triggerType = triggerType;\r\n            var colors = this.initColor();\r\n            this.createDom(colors);\r\n            this.setPopupPos($target);\r\n            this.markSelecteColor(color);\r\n            this.setEvent(callback);\r\n        }\r\n    }\r\n    return ColorPicker;\r\n});\n",
    "define('popup-menu',[\"jquery\", \"utils\"], function($, Utils) {\r\n    var Menu = {\r\n        name: \"menu-popup\",\r\n        selector: \".menu-popup\",\r\n        createDom: function(data) {\r\n            var liHtml = \"\",\r\n                html = \"\",\r\n                className = data.type || \"\",\r\n                item;\r\n            for (var i = 0, len = data.menus.length; i < len; i++) {\r\n                item = data.menus[i];\r\n                if (item.type == \"separator\") {\r\n                    liHtml += '<li class=\"separator\"></li>';\r\n                } else {\r\n                    liHtml += '<li class=\"' + item.operate + ' ' + item.status + '\" data-operate=\"' + item.operate + '\" data-value=\"' + item.value + '\"><i></i><span>' + item.text + '</span><span class=\"shortcut\">' + item.shortcut + '</span></li>';\r\n                }\r\n            }\r\n            html = '<div class=\"common-popup-block menu-popup ' + className + '\">\\\r\n                        <ul>' + liHtml + '</ul>\\\r\n                    </div>';\r\n            $(\"body\").append(html);\r\n        },\r\n        setPopupPos: function($target) {\r\n            var $popup = $(this.selector);\r\n            if ($target instanceof $) {\r\n                var offset = $target.offset(),\r\n                    height = $target.height(),\r\n                    gap = 5;\r\n                $popup.css({\r\n                    left: offset.left + \"px\",\r\n                    top: offset.top + height + gap + \"px\"\r\n                });\r\n            } else { // 应该传递一个事件对象\r\n                $popup.css({\r\n                    left: $target.clientX + \"px\",\r\n                    top: $target.clientY + \"px\"\r\n                });\r\n            }\r\n        },\r\n        clean: function() {\r\n            var $popup = $(this.selector);\r\n            $popup.remove();\r\n            this.triggerType = \"\";\r\n            $(document).off(\"click\", this.bindBodyClickEvent);\r\n        },\r\n        setEvent: function(callback) {\r\n            var self = this;\r\n            var $popup = $(this.selector);\r\n            $popup.find(\"li\").click(function() {\r\n                var $target = $(this),\r\n                    operate = $target.attr(\"data-operate\"),\r\n                    value = $target.attr(\"data-value\");\r\n                if ($target.hasClass(\"disabled\") || $target.hasClass(\"separator\")) {\r\n                    return;\r\n                }\r\n                callback(operate, value);\r\n                self.clean();\r\n            });\r\n            $(document).on(\"click\", self.bindBodyClickEvent);\r\n        },\r\n        bindBodyClickEvent: function(event) {\r\n            var $target = $(event.target);\r\n            if (Menu.triggerType != \"triggerByTarget\" && !$target.hasClass(Menu.name) && !$target.parents(Menu.name).length) {\r\n                Menu.clean();\r\n            }\r\n            Menu.triggerType = \"\";\r\n        },\r\n        init: function($target, data, callback, triggerType) {\r\n            this.clean();\r\n            this.triggerType = triggerType;\r\n            this.createDom(data);\r\n            this.setPopupPos($target);\r\n            this.setEvent(callback);\r\n        }\r\n    };\r\n    return Menu;\r\n});\n",
    "define('common',[\"layer\", \"utils\", \"color-picker\", \"popup-menu\"], function(layer, utils, colorPicker, popupMenu) {\r\n    return {\r\n        layer: layer,\r\n        utils: utils,\r\n        colorPicker: colorPicker,\r\n        popupMenu: popupMenu\r\n    }\r\n});\n",
    "define('attrs',[\"jquery\", \"underscore\", \"backbone\", \"svg\"], function($, _, Backbone, SVG) {\r\n    var attrModel = Backbone.View.extend({\r\n\r\n    });\r\n    var attrView = Backbone.View.extend({\r\n\r\n    });\r\n\r\n    return {\r\n        attrView: attrView,\r\n        attrModel: attrModel\r\n    }\r\n});\n",
    "define('view',[\"jquery\", \"underscore\", \"backbone\", \"svg\"], function($, _, Backbone, SVG) {\r\n    var View = Backbone.View.extend({\r\n\r\n    });\r\n\r\n    var LineView = View.extend({\r\n\r\n    });\r\n\r\n    var RectView = View.extend({\r\n\r\n    });\r\n\r\n    var DeviceView = View.extend({\r\n\r\n    });\r\n\r\n    return {\r\n        base: View,\r\n        line: LineView,\r\n        rect: RectView,\r\n        device: DeviceView\r\n    }\r\n});\n",
    "define('model',[\"jquery\", \"underscore\", \"backbone\", \"svg\"], function($, _, Backbone, SVG) {\r\n    var Model = Backbone.Model.extend({\r\n\r\n    });\r\n\r\n    var LineModel = Model.extend({\r\n\r\n    });\r\n\r\n    var RectModel = Model.extend({\r\n\r\n    });\r\n\r\n    var DeviceModel = Model.extend({\r\n\r\n    });\r\n\r\n    return {\r\n        base: Model,\r\n        line: LineModel,\r\n        rect: RectModel,\r\n        device: DeviceModel\r\n    }\r\n});\n",
    "require([\"config\", \"jquery\", \"underscore\", \"backbone\", \"svg\", \"common\", \"attrs\", \"view\", \"model\"], function(config, $, _, Backbone, SVG, C, Attr, View, Model) {\r\n    $(\".color, .full-color, .stroke-color\").click(function() {\r\n        var $target = $(this);\r\n        C.colorPicker.init($target, \"000000\", function(color) {\r\n            C.layer.topNotify(\"info\", { content: \"颜色值: #\" + color, shade: false, time: 2 });\r\n        }, \"triggerByTarget\");\r\n    });\r\n    var data = {\r\n        type: \"with-selected\",\r\n        menus: [{\r\n                operate: \"copy\",\r\n                status: \"selected\",\r\n                value: \"\",\r\n                text: \"复制\",\r\n                shortcut: \"ctrl+c\"\r\n            },\r\n            {\r\n                operate: \"copy\",\r\n                status: \"disabled\",\r\n                value: \"\",\r\n                text: \"复制\",\r\n                shortcut: \"ctrl+c\"\r\n            },\r\n            {\r\n                type: \"separator\"\r\n            },\r\n            {\r\n                operate: \"cut\",\r\n                status: \"\",\r\n                value: \"cut\",\r\n                text: \"剪切\",\r\n                shortcut: \"ctrl+x\"\r\n            },\r\n            {\r\n                operate: \"page\",\r\n                status: \"\",\r\n                value: \"paste\",\r\n                text: \"粘贴\",\r\n                shortcut: \"ctrl+v\"\r\n            }\r\n        ]\r\n    };\r\n    var data1 = {\r\n        type: \"\",\r\n        menus: [{\r\n                operate: \"copy\",\r\n                status: \"selected\",\r\n                value: \"\",\r\n                text: \"复制\",\r\n                shortcut: \"ctrl+c\"\r\n            },\r\n            {\r\n                operate: \"copy\",\r\n                status: \"disabled\",\r\n                value: \"\",\r\n                text: \"复制\",\r\n                shortcut: \"ctrl+c\"\r\n            },\r\n            {\r\n                type: \"separator\"\r\n            },\r\n            {\r\n                operate: \"cut\",\r\n                status: \"\",\r\n                value: \"cut\",\r\n                text: \"剪切\",\r\n                shortcut: \"ctrl+x\"\r\n            },\r\n            {\r\n                operate: \"page\",\r\n                status: \"\",\r\n                value: \"paste\",\r\n                text: \"粘贴\",\r\n                shortcut: \"ctrl+v\"\r\n            }\r\n        ]\r\n    };\r\n    $(\".border-width, .border-style\").click(function(event) {\r\n        var $target = $(this);\r\n        C.popupMenu.init($target, data, function(operate, value) {\r\n            C.layer.topNotify(\"info\", { content: \"operate: \" + operate + \"<br />value: \" + value, shade: false, time: 2 });\r\n        }, \"triggerByTarget\");\r\n    });\r\n\r\n    var AppView = View.base.extend({\r\n        initialize: function(data) {\r\n            this.svg = SVG(\"svg-wrapper\").size(\"100%\", \"100%\");\r\n            this.bg = null;\r\n            if (data.isEdit) {\r\n                var deviceHeight = $(\".bottom-icons\")[0].offsetHeight;\r\n                $(\".draw-content\").css(\"margin-bottom\", deviceHeight + \"px\");\r\n            }\r\n            this.render(data);\r\n            this.setRightBtnMenu();\r\n        },\r\n        renderGrid: function() {\r\n            var gap = 12,\r\n                box = this.svg.rbox(),\r\n                start, end,\r\n                shadowColor = \"#ccc\",\r\n                deepColor = \"#999\",\r\n                lineWidth = 1,\r\n                path,\r\n                max = Math.max(box.width, box.height);\r\n            if (this.bg) {\r\n                this.bg.clear();\r\n            } else {\r\n                this.bg = this.svg.group();\r\n            }\r\n            for (i = 0; i <= max; i += gap) {\r\n                if (i <= box.height) { // 横线\r\n                    path = this.bg.path(\"M \" + 0 + \" \" + i + \" L \" + box.width + \" \" + i);\r\n                    if ((i / gap) % 4) {\r\n                        path.stroke({ color: shadowColor });\r\n                    } else {\r\n                        path.stroke({ color: deepColor });\r\n                    }\r\n                    path.transform({ y: 0.5 });\r\n                }\r\n                if (i <= box.width) { // 竖线\r\n                    path = this.bg.path(\"M \" + i + \" \" + 0 + \" L \" + i + \" \" + box.height);\r\n                    if ((i / gap) % 4) {\r\n                        path.stroke({ color: shadowColor, width: lineWidth });\r\n                    } else {\r\n                        path.stroke({ color: deepColor, width: lineWidth });\r\n                    }\r\n                    path.transform({ x: 0.5 });\r\n                }\r\n            }\r\n        },\r\n        render: function(data) {\r\n            this.renderGrid();\r\n        },\r\n        setRightBtnMenu: function() {\r\n            $(document).contextmenu(function(event) {\r\n                var $target = $(event.target);\r\n                if ($target.hasClass(\"draw-content\") || $target.parents(\".draw-content\").length) {\r\n                    C.popupMenu.init(event, data1, function(operate, value) {\r\n                        C.layer.topNotify(\"info\", { content: \"operate: \" + operate + \"<br />value: \" + value, shade: false, time: 2 });\r\n                    });\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n\r\n    });\r\n    var app = null;\r\n\r\n    window.Draw = {\r\n        checkData: function(data) {\r\n            return data;\r\n        },\r\n        init: function(data, callback) {\r\n            var validData = this.checkData(data);\r\n            app = new AppView(validData);\r\n        },\r\n        save: function(callback) {\r\n            if (!app) {\r\n                console.log(\"draw not inited\");\r\n                return;\r\n            }\r\n        },\r\n        setEvent: function(eventType, targetType, callback) {\r\n            if (!app) {\r\n                console.log(\"draw not inited\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    Draw.init({\r\n            el: \".outer-wrapper\",\r\n            isEdit: true\r\n        },\r\n        function() {\r\n            C.layer.topNotify(\"success\", { content: \"draw inited\", shade: false, time: 2 });\r\n        }\r\n    );\r\n});\ndefine(\"draw\", function(){});\n\n"
  ]
}